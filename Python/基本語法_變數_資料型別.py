# -*- coding: utf-8 -*-
"""
Created on Wed May  6 14:57:22 2020

@author: ASUS
"""

#------------------------------------------
'''

Python程式檔格式:*.py
jupyter程式檔格式:*.ipynb

'''
a=1
b=100
print("Sum =",a+b)

#----------------------------------------------
'''
num1=變數
int=資料型態(整數)
input=輸入
if=條件式
while=迴圈
print=輸出

'''
num1=int(input('請輸入第一個數值：'))
num2=int(input('請輸入第二個數值：'))
if num1<num2:
    tmp_num=num1
    num1=num2
    num2=tmp_num
while num2 !=0:
    tmp_num=num1 % num2
    num1 = num2    
    num2=tmp_num
print('最大公因數=',num1)

#----------------------------------------------

'''
程式區分大小寫
程式敘述以當行為主(一個完整的敘述與法)
若要在單行撰寫2個以上的完整語法,期間以;隔開每一個完\
    整的敘述
程式分行：
        \
        +
        
變數值相等時a=b=c=12
        ex: y = a + \
                b + \
                c + \
                20
            print(y)
          

a , b , c = 10 , 6.8 , "python"
print('',a,b,c)

變數:程式當中負責儲存資料供程式使用
     隨程式執行而變動其值
     直接寫出使用,不需特別宣告
     不需宣告其資料型態,系統會根據變數值自行設定
     命名規則:
         (1)第一個字元可以是英文大小寫,底線符號,\
             中文(不建議使用)
         (2)其他字元可以是英文大小寫,數字,底線符號,\
             中文(不建議使用)
         (3)英文大小寫視為不同的變數名稱
         (4)不可以使用關鍵字,內建涵式,內建類別名稱
         (5)建議:盡量以該變數在程式當中代表的功能或意\
             義命名,如age代表年齡
    錯誤變數名稱:
        class    與關鍵字重複
        num@123  不合法的符號
        7eleven  不可使用數字
        !name    不可使用符號(底線除外)
        my name  不可使用符號(中間的空白)
'''

'''
資料型別：
    Python採動態型別(無須事先宣告)
    另有強制行別宣告
    型別：
        int(整數)
        float(浮點數)
        bool(布林值)(ture,false)
        str(字串)以單.雙引號前後括住
        相同型別的資料方可運算
    Python具備自動轉換型別的功能,若無法自動轉換則採\
        強制型別宣告:(使用下列函數)
    ex:int(資料) 將資料轉換成int
       type(資料)  #查詢資料型態
    int:
       預設為10進位
    另有：
       二進位:數值前加上0b
       八進位:數值前加上0o
       十六進位:數值前加上0x
    轉換函數:
        bin(資料)
        oct(資料)
        hex(資料)
#--------------------------------
'''
a=10;b=20;print(a+b)
#------------------
a=b=c=12
y = a+\
    a+\
    c+\
    20
print('Total=',y)

#------------------
x=10
y=x/3
print(x)
print(type(x))
print(y)
print(type(y))
#------------------------
x=10
print(x)
print(type(x))
x=x+5.5
print(x)
print(type(x))
#------------------------
x=0b001000001
print(x)
print(bin(x))
#------------------------
x=0o101
print(x)
print(oct(x))
#------------------------
x=0x41
print(x)
print(hex(x))
#------------------------
print(hex(255))
print(oct(255))
print(bin(255))


